@model AnimalsListingViewModel

@{
    ViewData["Title"] = "All Animals in the zoo.";
}

<h1 class="text-center">@ViewData["Title"]</h1>
<br />

@foreach (var animal in Model.Animals)
{
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-4">
            <h3 style="text-align:start">Name: @animal.Name</h3>
            <h3 style="text-align:start">Age: @animal.Age</h3>
            <h3 style="text-align:start">Animal Class: @animal.AnimalClass</h3>
        </div>
        <div class="col-md-6"></div>
        <div class="col-md-6">
            <img class="img-responsive" src="@animal.ImageUrl" alt="Animal" style="max-height:150px;max-width:250px" />
        </div>
    </div>
    <br />
    <br />
}

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Animals" asp-action="Index" asp-route-id="@Model.PreviousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 3;

            var pagesToShow = new List<int>();

            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = Model.CurrentPage - MorePagesToShow; i <= Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = Model.PagesCount - MorePagesToShow + 1; i <= Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow
                .Where(x => x <= Model.PagesCount)
                .Distinct()
                .OrderBy(x => x)
                .ToList();
        }

        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];

            if (pageNumber == Model.CurrentPage)
            {
                className = "active";
            }

            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Animals" asp-action="Index" asp-route-id="@(pagesToShow[i - 1] + 1)">...</a></li>
            }

            <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Animals" asp-action="Index" asp-route-id="@pageNumber">@pageNumber</a></li>
        }

        @if (Model.CurrentPage < Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Animals" asp-action="Index" asp-route-id="@Model.NextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>